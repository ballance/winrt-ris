<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="Risotto.DocumentDetailPage"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Risotto"
    xmlns:common="using:Risotto.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:q42converters="using:Q42.WinRT.Converters" 
    xmlns:q42controls="using:Q42.WinRT.Controls"
    xmlns:winrtxamltkext="using:WinRTXamlToolkit.Controls.Extensions"
    mc:Ignorable="d">

    <Page.TopAppBar>
        <AppBar>
            <Button AutomationProperties.Name="Home"  
                            x:Name="Home" 
                            Style="{StaticResource HomeAppBarButtonStyle}" 
                            Tag="Home" 
                            Command="{Binding HomeCommand, Mode=OneWay}" />
        </AppBar>
    </Page.TopAppBar>
    
    <Page.Resources>
        <q42converters:VisibilityConverter x:Name="q42visconverter" />
        <common:NonNullToVisibilityConverter x:Name="nonnullvisconv" />
    </Page.Resources>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <ProgressBar
                     Visibility="{Binding UpdateInProgress, Converter={StaticResource q42visconverter}}"
                     HorizontalAlignment="Center" 
                     VerticalAlignment="Top" 
                     IsIndeterminate="True"  
                     Width="300" />
        
        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
            <TextBlock x:Name="pageTitle" Grid.Column="1" Text="{Binding PageTitle}" Style="{StaticResource PageHeaderTextStyle}"/>
        </Grid>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0"/><!-- when using custom CSS / XSLT: 120 for left and right columns -->
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="0"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="100" />
            </Grid.RowDefinitions>
            
            <WebView Grid.Column="1" x:Name="webView" 
                     q42controls:WebViewExtensions.SourceHtml="{Binding SourceHtml}"
                     HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
            <Rectangle Grid.Column="1" x:Name="webViewRect" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />

            <StackPanel Grid.Column="1" x:Name="snappedInfoMessage" Visibility="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock Style="{StaticResource SnappedPageHeaderTextStyle}" HorizontalAlignment="Center" 
                       TextWrapping="Wrap" 
                       VerticalAlignment="Center" 
                       TextAlignment="Center">Gesetzestextanzeige ist in der aktuellen Ansicht nicht möglich</TextBlock>
            </StackPanel>
        </Grid>

        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!-- The back button and title have different styles when snapped -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="webView" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="snappedInfoMessage" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>
                        
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>

    <Page.BottomAppBar>
        <AppBar winrtxamltkext:AppBarExtensions.HideWhenSnapped="True">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50*"/>
                    <ColumnDefinition Width="50*"/>
                </Grid.ColumnDefinitions>
                <StackPanel x:Name="ContextItemsPanel" Orientation="Horizontal" Grid.Column="0" HorizontalAlignment="Left">
                    <Button AutomationProperties.Name="Lokal merken"  
                            x:Name="Download" 
                            Style="{StaticResource AddAppBarButtonStyle}" 
                            IsEnabled="{Binding CanAddDownload}"
                            Tag="Download" 
                            Command="{Binding AddDownloadCommand, Mode=OneWay}" />
                    <Button AutomationProperties.Name="Anhänge"  
                            x:Name="ViewAttachments" 
                            Style="{StaticResource MoreAppBarButtonStyle}" 
                            Visibility="{Binding Attachments, Converter={StaticResource nonnullvisconv}}"
                            Tag="ViewAttachments"
                            Click="ViewAttachments_OnClick"
                            />
                </StackPanel>
                <StackPanel x:Name="GlobalActionsPanel" Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right">
                    <Button AutomationProperties.Name="Dev:XML"  
                            x:Name="DevXml" 
                            Style="{StaticResource PreviewLinkAppBarButtonStyle}" 
                            Visibility="{Binding IsDebugBuild}"
                            Tag="Dev:XML" 
                            Click="DevXml_OnClick"
                            />
                    <Button AutomationProperties.Name="Am Web"  
                            x:Name="ViewOnWeb" 
                            Style="{StaticResource GlobeAppBarButtonStyle}" 
                            Visibility="{Binding SourceHtml, Converter={StaticResource nonnullvisconv}}"
                            Tag="Am Web" 
                            Click="ViewOnWeb_OnClick"
                            />
                    <Button AutomationProperties.Name="Als PDF"  
                            x:Name="ViewPdf" 
                            Style="{StaticResource DownloadAppBarButtonStyle}" 
                            Visibility="{Binding SourceHtml, Converter={StaticResource nonnullvisconv}}"
                            Tag="Als PDF" 
                            Click="ViewPdf_OnClick"
                            />
                    <Button AutomationProperties.Name="Html speichern"  
                            x:Name="Save" 
                            Style="{StaticResource SaveAppBarButtonStyle}" 
                            Visibility="{Binding SourceHtml, Converter={StaticResource nonnullvisconv}}"
                            Tag="Speichern" 
                            Click="Save_OnClick"
                            />
                </StackPanel>
            </Grid>
        </AppBar>
    </Page.BottomAppBar>
</common:LayoutAwarePage>
